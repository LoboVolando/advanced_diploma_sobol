version: "3.7"
networks:
  skynet:
    driver: bridge
services:
  application:
    container_name: application
    build:
      context: .
      dockerfile: application/Dockerfile
#    environment:
#      web_db: ${WEB_DB}
#      POSTGRES_ROOT_USER: ${POSTGRES_ROOT_USER}
#      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
#      POSTGRES_HOST: ${POSTGRES_HOST}
#      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - ./.env:/application/.env
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./supervisord.ini:/etc/supervisor/conf.d/supervisord.ini:ro
      - ./application:/application

#    command: bash -c "python run_migrations.py && /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.ini"
    command: bash -c "/usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.ini"
    expose:
      - 5454
    ports:
      - "5454:8000"
#    depends_on:
#      - postgres
    networks:
      - skynet

  postgres:
    container_name: postgres
    image: postgres:14.3
    command:
      - "postgres"
      - "-c"
      - "log_destination=stderr"
      - "-c"
      - "logging_collector=on"
      - "-c"
      - "log_directory=/var/lib/postgresql/data/pg_log"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
    ports:
      - "5002:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_USER: ${POSTGRES_ROOT_USER}
      POSTGRES_DB: ${POSTGRES_ROOT_DB}
    volumes:
      - ./db/data/:/var/lib/postgresql/data
      - ./db/pginit/:/docker-entrypoint-initdb.d
    networks:
      - skynet
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_ROOT_USER} -d ${POSTGRES_ROOT_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.10
    environment:
      PGADMIN_DEFAULT_EMAIL: "0507033@211.ru"
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5004:80"
    depends_on:
      - postgres
    networks:
      - skynet

  grafana:
    image: grafana/grafana
    ports:
      - "5003:3000"
    networks:
      - skynet

  prometheus:
    image: prom/prometheus
    ports:
      - "5009:9090"
    networks:
      - skynet
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  nginx-exporter:
    container_name: nginx-exporter
    image: nginx/nginx-prometheus-exporter
    ports:
    - "5013:9113"
    command:
    - -nginx.scrape-uri
    - http://front/stub_status
    networks:
      - skynet
    depends_on:
      - application
      - prometheus
      - grafana

  postgres_exporter:
    container_name: postgres_exporter
    image: prometheuscommunity/postgres-exporter
    command: --log.level=debug
    environment:
      DATA_SOURCE_URI: "postgres:5432/${POSTGRES_ROOT_DB}?sslmode=disable"
      DATA_SOURCE_USER: ${POSTGRES_ROOT_USER}
      DATA_SOURCE_PASS: ${POSTGRES_ROOT_PASSWORD}
#      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
#    volumes:
#      - ./postgres_exporter/queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    networks:
      - skynet
    restart: unless-stopped
    depends_on:
      - postgres
#          - condition: service_started