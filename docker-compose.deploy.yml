version: "3.7"

services:
  fluentd:
    container_name: fly-diplom
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
      - "24224:4224/udp"
    build: ./fluentd
    networks:
      - skynet

  backend:
    working_dir: /backend
    container_name: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend/src:/backend
#      - ./.env:/backend/.env
      - ${SERVER_MEDIA_ROOT}:${DOCKER_MEDIA_ROOT}
    command: bash -c "alembic -c ${ALEMBIC} upgrade head && gunicorn app:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind backend:80"
    ports:
      - "7202:80"
    networks:
      - skynet
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.app
    environment:
      POSTGRES_ROOT_USER: ${POSTGRES_ROOT_USER}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: 5432
      DEBUG: ${DEBUG}
      DOCKER_MEDIA_ROOT: ${DOCKER_MEDIA_ROOT}
      MEDIA_URL: ${MEDIA_URL}
      ALEMBIC: ${ALEMBIC}

    depends_on:
      - postgres
      - fluentd

  frontend:
    container_name: frontend
    image: nginx
    volumes:
      - ${NGINX}:/etc/nginx/nginx.conf:ro
      - ./frontend/src:/frontend
      - ./frontend/logs:/frontend/logs
      - ${SERVER_MEDIA_ROOT}:${DOCKER_MEDIA_ROOT}
#    depends_on:
#      - backend
    expose:
      - 5454
    ports:
      - "7200:80"
    networks:
      - skynet

  redis:
    container_name: redis
    image: redis:7.0.0
    restart: always
    privileged: true
    environment:
      - save=60
      - loglevel=debug
    ports:
      - '5479:6379'
    volumes:
      - ./redis/logs:/var/log
    networks:
      - skynet

  postgres:
    container_name: postgres
    image: postgres:14.3
    ports:
      - "5002:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_USER: ${POSTGRES_ROOT_USER}
      POSTGRES_DB: ${POSTGRES_ROOT_DB}
    volumes:
      - ${DATA_ROOT}/postgres/data/:/var/lib/postgresql/data
      - ${DATA_ROOT}/postgres/pginit/:/docker-entrypoint-initdb.d
    networks:
      - skynet
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_ROOT_USER} -d ${POSTGRES_ROOT_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.10
    environment:
      PGADMIN_DEFAULT_EMAIL: "0507033@211.ru"
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5004:80"
    depends_on:
      - postgres
    networks:
      - skynet

  grafana:
    image: grafana/grafana
    ports:
      - "5003:3000"
    networks:
      - skynet

  prometheus:
    image: prom/prometheus
    ports:
      - "5009:9090"
    networks:
      - skynet
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  nginx-exporter:
    container_name: nginx-exporter
    image: nginx/nginx-prometheus-exporter
    ports:
    - "5013:9113"
    command:
    - -nginx.scrape-uri
    - http://front/stub_status
    networks:
      - skynet
    depends_on:
      - frontend
      - backend
      - prometheus
      - grafana

  postgres_exporter:
    container_name: postgres_exporter
    image: prometheuscommunity/postgres-exporter
    command: --log.level=debug
    environment:
      DATA_SOURCE_URI: "postgres:5432/${POSTGRES_ROOT_DB}?sslmode=disable"
      DATA_SOURCE_USER: ${POSTGRES_ROOT_USER}
      DATA_SOURCE_PASS: ${POSTGRES_ROOT_PASSWORD}
#      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
#    volumes:
#      - ./postgres_exporter/queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    networks:
      - skynet
    restart: unless-stopped
    depends_on:
      - postgres
#          - condition: service_started

networks:
  skynet:
    driver: bridge
    name: home-net
